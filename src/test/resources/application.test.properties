azurestorage.queues.transactionexpiration.name=transactionexpiration
azurestorage.queues.transactionsrefund.name=transactionsrefund
azurestorage.queues.transactionrefundretry.name=transactionrefundretry
azurestorage.queues.transactionclosepayment.name=transactionclosepayment
azurestorage.queues.transactionclosepaymentretry.name=transactionclosepaymentretry
azurestorage.queues.transactionnotificationretry.name=transactionnotificationretry
azurestorage.queues.transactionnotification.name=transactionnotification
azurestorage.queues.transactionauthorizationrequested.name=transactionauthrequested
azurestorage.queues.transactionauthorizationoutcomewaiting.name=transactionauthoutcomewaiting
azurestorage.transient.connectionstring=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1
azurestorage.queues.deadletter.name=transactionsdeadletter
azurestorage.deadletter.connectionstring=DefaultEndpointsProtocol=http;AccountName=devstoreaccount2;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1
spring.cloud.azure.storage.queue.account-key=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==
spring.cloud.azure.storage.queue.account-name=devstoreaccount1
spring.cloud.azure.storage.queue.endpoint=http://127.0.0.1:10001/devstoreaccount1
nodo.uri=https://localhost/nodo
nodo.readTimeout=10000
nodo.connectionTimeout=10000
nodo.nodeforecommerce.apikey=key
nodo.ecommerce.clientId=key
spring.data.redis.host=redis
spring.data.redis.password=redis
spring.data.redis.port=9999
spring.data.redis.ssl.enabled=false
spring.data.mongodb.uri=mongodb://mongo:mongo@$mongo:6080/?&readPreference=primaryPreferred&maxStalenessSeconds=90&minPoolSize=0&maxPoolSize=10&maxIdleTimeMS=100&connectTimeoutMS=100&socketTimeoutMS=100&serverSelectionTimeoutMS=100&waitQueueTimeoutMS=100&heartbeatFrequencyMS=100
spring.data.mongodb.database=ecommerce
server.port=9000
management.endpoint.health.probes.enabled=true
refundRetry.eventOffsetSeconds=60
refundRetry.maxAttempts=3
closePaymentRetry.eventOffsetSeconds=60
closePaymentRetry.maxAttempts=3
notificationRetry.eventOffsetSeconds=60
notificationRetry.maxAttempts=3
transactionAuthorizationOutcomeWaiting.eventOffsetSeconds=60
transactionAuthorizationOutcomeWaiting.maxAttempts=3
notificationsService.uri=http://localhost/notifications-service
notificationsService.readTimeout=10000
notificationsService.connectionTimeout=10000
notificationsService.apiKey=notifications-service-api-key
transactionsService.uri=http://localhost/transactions-service
transactionsService.readTimeout=10000
transactionsService.connectionTimeout=10000
transactionsService.apiKey=transactions-service-api-key
confidentialDataManager.personalDataVault.apiKey=apiKey
confidentialDataManager.walletSessionPersonalDataVault.apiKey=apiKey
confidentialDataManager.personalDataVault.apiBasePath=localhost
sendPaymentResult.timeoutSeconds=3900
sendPaymentResult.expirationOffset=10
npg.uri=https://stg-ta.nexigroup.com/api/phoenix-0.0/psp/api/v1
npg.readTimeout=1000
npg.connectionTimeout=1000
npg.client.apiKey=npg-api-key
npg.authorization.cards.keys={"psp1-cards":"key1","psp2-cards":"key2"}
npg.authorization.cards.pspList=psp1-cards,psp2-cards
npg.authorization.paypal.keys={"psp1-paypal":"paypal-key1","psp2-paypal":"paypal-key2"}
npg.authorization.paypal.pspList=psp1-paypal,psp2-paypal
npg.authorization.bancomatpay.keys={"psp1-bancomatpay":"bancomatpay-key1","psp2-bancomatpay":"bancomatpay-key2"}
npg.authorization.bancomatpay.pspList=psp1-bancomatpay,psp2-bancomatpay
npg.authorization.mybank.keys={"psp1-mybank":"mybank-key1","psp2-mybank":"mybank-key2"}
npg.authorization.mybank.pspList=psp1-mybank,psp2-mybank
npg.authorization.satispay.keys={"psp1-satispay":"satispay-key1","psp2-satispay":"satispay-key2"}
npg.authorization.satispay.pspList=psp1-satispay,psp2-satispay
npg.authorization.applepay.keys={"psp1-applepay":"applepay-key1","psp2-applepay":"applepay-key2"}
npg.authorization.applepay.pspList=psp1-applepay,psp2-applepay
npg.authorization.googlepay.keys={"psp1-googlepay":"googlepay-key1","psp2-googlepay":"googlepay-key2"}
npg.authorization.googlepay.pspList=psp1-googlepay,psp2-googlepay
npg.refund.delayFromAuthRequestMinutes=10
npg.refund.eventProcessingDelaySeconds=10
redisStream.eventController.streamKey=event-dispatcher-commands
eventController.status.pollingChron=*/10 * * * * *
node.forwarder.apiKey=node-forwarder-api-key
node.forwarder.url=http://localhost/checkout-redirect/forwarder
redirect.paymentTypeCodes=psp1-redirect,psp2-redirect
redirect.pspUrlMapping={"psp1-redirect":'http://localhost:8096/redirections',"psp2-redirect":'http://localhost:8096/redirections'}
node.forwarder.readTimeout=10000
node.forwarder.connectionTimeout=10000
userStatsService.uri=http://localhost/userstats
userStatsService.readTimeout=10000
userStatsService.connectionTimeout=10000
userStatsService.apiKey=userStatsApiKey
userStatsService.enableSaveLastUsage=true
transactionAuthorizationOutcomeWaiting.firstAttemptDelaySeconds=180