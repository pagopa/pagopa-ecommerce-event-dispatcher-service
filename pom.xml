<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.12</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>it.pagopa.ecommerce</groupId>
	<artifactId>pagopa-ecommerce-event-dispatcher-service</artifactId>
	<version>1.24.0</version>
	<name>pagopa-ecommerce-event-dispatcher-service</name>
	<description>pagoPA ecommerce microservice to handle transaction events and perform async operations such as
		send user email, refund based on transaction status</description>
	<properties>
		<java.version>17</java.version>
		<kotlin.version>1.6.21</kotlin.version>
		<kotlinx-coroutines.version>1.6.2</kotlinx-coroutines.version>
		<spring-cloud-azure.version>4.0.0</spring-cloud-azure.version>
		<jacoco.version>0.8.8</jacoco.version>
		<pagopa-ecommerce-commons.version>1.25.1</pagopa-ecommerce-commons.version>
		<sonar.coverage.exclusions> <!-- the members of the following list should be in the same line -->
			**/it/pagopa/transactions/**,
			**/it/pagopa/ecommerce/eventdispatcher/validation/**
		</sonar.coverage.exclusions>
		<spotless.version>2.28.0</spotless.version>
		<mock-web-server.version>4.11.0</mock-web-server.version>
		<ecs-logging-version>1.5.0</ecs-logging-version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>com.azure.spring</groupId>
			<artifactId>spring-cloud-azure-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>com.azure.spring</groupId>
			<artifactId>spring-cloud-azure-starter-data-cosmos</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-kotlin</artifactId>
		</dependency>
		<dependency>
			<groupId>io.projectreactor.kotlin</groupId>
			<artifactId>reactor-kotlin-extensions</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jdk8</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-core</artifactId>
			<version>${kotlinx-coroutines.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-reactor</artifactId>
			<version>${kotlinx-coroutines.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.azure.spring</groupId>
			<artifactId>spring-cloud-azure-starter-integration-storage-queue</artifactId>
			<version>4.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-storage-queue</artifactId>
			<version>12.13.0</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-maven-lombok</artifactId>
			<version>1.7.10</version>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.vavr</groupId>
			<artifactId>vavr</artifactId>
			<version>0.10.4</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.30</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito.kotlin</groupId>
			<artifactId>mockito-kotlin</artifactId>
			<version>4.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-test</artifactId>
			<version>${kotlinx-coroutines.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>0.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>2.2.19</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>3.0.2</version>
		</dependency>
		<dependency>
			<groupId>co.elastic.logging</groupId>
			<artifactId>logback-ecs-encoder</artifactId>
			<version>${ecs-logging-version}</version>
		</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>${jacoco.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>it.pagopa</groupId>
			<artifactId>pagopa-ecommerce-commons</artifactId>
			<version>${pagopa-ecommerce-commons.version}</version>
		</dependency>
		<dependency>
			<groupId>it.pagopa</groupId>
			<artifactId>pagopa-ecommerce-commons</artifactId>
			<version>${pagopa-ecommerce-commons.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>${mock-web-server.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>mockwebserver</artifactId>
			<version>${mock-web-server.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-resolver-dns-native-macos</artifactId>
			<version>4.1.82.Final</version>
			<classifier>osx-aarch_64</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-api</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-sdk</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-otlp</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-semconv</artifactId>
			<version>1.27.0-alpha</version>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.azure.spring</groupId>
				<artifactId>spring-cloud-azure-dependencies</artifactId>
				<version>${spring-cloud-azure.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.opentelemetry</groupId>
				<artifactId>opentelemetry-bom</artifactId>
				<version>1.34.1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<jvmArguments>--enable-preview</jvmArguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/src/main/kotlin</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<configuration>
					<args>
						<arg>-Xjsr305=strict</arg>
						<arg>-opt-in=kotlin.RequiresOptIn</arg>
					</args>
					<compilerPlugins>
						<plugin>spring</plugin>
						<plugin>lombok</plugin>
					</compilerPlugins>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-allopen</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-lombok</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
					<dependency>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok</artifactId>
						<version>1.18.20</version>
						<scope>compile</scope>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>compile</id>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
								<sourceDir>${project.build.directory}/generated-sources/openapi/src/main/java</sourceDir>
								<sourceDir>${project.build.directory}/generated-sources/openapi/src/main/kotlin</sourceDir>
								<sourceDir>${project.build.directory}/generated-sources/jsonschema2pojo</sourceDir>
								<sourceDir>${project.basedir}/src/main/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
					<execution>
						<id>test-compile</id>
						<goals>
							<goal>test-compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
								<sourceDir>${project.build.directory}/generated-sources/openapi/src/main/java</sourceDir>
								<sourceDir>${project.basedir}/src/main/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>7.1.0</version>
				<executions>
					<execution>
						<id>node-api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>
								https://raw.githubusercontent.com/pagopa/pagopa-infra/main/src/core/api/nodopagamenti_api/nodoPerPM/v2/_openapi.json.tpl
							</inputSpec>
							<generatorName>spring</generatorName>
							<library>spring-cloud</library>
							<generateApiDocumentation>false</generateApiDocumentation>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>true</generateSupportingFiles>
							<modelPackage>it.pagopa.generated.ecommerce.nodo.v2.dto</modelPackage>
							<apiPackage>it.pagopa.generated.ecommerce.nodo.v2.api</apiPackage>
							<modelNameSuffix>dto</modelNameSuffix>
							<configOptions>
								<interfaceOnly>true</interfaceOnly>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>notifications-service-api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>https://raw.githubusercontent.com/pagopa/pagopa-infra/main/src/domains/ecommerce-app/api/ecommerce-notifications-service/v1/_openapi.json.tpl</inputSpec>
							<generatorName>java</generatorName>
							<library>webclient</library>
							<generateApiDocumentation>false</generateApiDocumentation>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>true</generateSupportingFiles>
							<configOptions>
								<swaggerAnnotations>false</swaggerAnnotations>
								<openApiNullable>false</openApiNullable>
							</configOptions>
							<modelPackage>it.pagopa.generated.notifications.v1.dto</modelPackage>
							<apiPackage>it.pagopa.generated.notifications.v1.api</apiPackage>
							<modelNameSuffix>dto</modelNameSuffix>
						</configuration>
					</execution>
					<execution>
						<id>transactions-service-api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>https://raw.githubusercontent.com/pagopa/pagopa-infra/main/src/domains/ecommerce-app/api/ecommerce-transaction-auth-requests-service/v1/_openapi.json.tpl</inputSpec>
							<generatorName>java</generatorName>
							<library>webclient</library>
							<generateApiDocumentation>false</generateApiDocumentation>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>true</generateSupportingFiles>
							<configOptions>
								<swaggerAnnotations>false</swaggerAnnotations>
								<openApiNullable>false</openApiNullable>
								<useOneOfInterfaces>true</useOneOfInterfaces>
							</configOptions>
							<modelPackage>it.pagopa.generated.transactionauthrequests.v1.dto</modelPackage>
							<apiPackage>it.pagopa.generated.transactionauthrequests.v1.api</apiPackage>
							<modelNameSuffix>dto</modelNameSuffix>
						</configuration>
					</execution>
					<execution>
						<id>event-dispatcher-api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/api-spec/event-dispatcher-api.yaml</inputSpec>
							<generatorName>kotlin-spring</generatorName>
							<library>spring-boot</library>
							<modelNameSuffix>Dto</modelNameSuffix>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<configOptions>
								<basePackage>it.pagopa.generated.eventdispatcher.server</basePackage>
								<modelPackage>it.pagopa.generated.eventdispatcher.server.model</modelPackage>
								<apiPackage>it.pagopa.generated.eventdispatcher.server.api</apiPackage>
								<configPackage>it.pagopa.generated.eventdispatcher.server.config</configPackage>
								<interfaceOnly>true</interfaceOnly>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<skipDefaultInterface>true</skipDefaultInterface>
								<useSwaggerUI>false</useSwaggerUI>
								<reactive>true</reactive>
								<enumPropertyNaming>UPPERCASE</enumPropertyNaming>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>redirect-api-v1</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>./api-spec/client/openapi/redirect/redirect-api.yaml</inputSpec>
							<generatorName>java</generatorName>
							<library>webclient</library>
							<generateApiDocumentation>false</generateApiDocumentation>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>true</generateSupportingFiles>
							<configOptions>
								<swaggerAnnotations>false</swaggerAnnotations>
								<openApiNullable>false</openApiNullable>
							</configOptions>
							<modelPackage>it.pagopa.generated.ecommerce.redirect.v1.dto</modelPackage>
							<apiPackage>it.pagopa.generated.ecommerce.redirect.v1.api</apiPackage>
							<modelNameSuffix>dto</modelNameSuffix>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jsonschema2pojo</groupId>
				<artifactId>jsonschema2pojo-maven-plugin</artifactId>
				<version>1.1.2</version>
				<executions>
					<execution>
						<id>success-template</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<sourcePaths>
								<sourcePath>${basedir}/src/main/resources/schemas/templates/success.json</sourcePath>
							</sourcePaths>
							<targetPackage>it.pagopa.generated.notifications.templates.success</targetPackage>
							<classNameSuffix>Template</classNameSuffix>
							<includeConstructors>true</includeConstructors>
						</configuration>
					</execution>
					<execution>
						<id>ko-template</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<sourcePaths>
								<sourcePath>${basedir}/src/main/resources/schemas/templates/ko.json</sourcePath>
							</sourcePaths>
							<targetPackage>it.pagopa.generated.notifications.templates.ko</targetPackage>
							<classNameSuffix>Template</classNameSuffix>
							<includeConstructors>true</includeConstructors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<id>compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>testCompile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<source>17</source>
					<target>17</target>
					<compilerArgs>--enable-preview</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>
					<excludes>
						<exclude>it/pagopa/generated/**</exclude>
						<exclude>it/pagopa/transactions/**</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.1</version>
				<configuration>
					<argLine>${argLine} --enable-preview</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>2.0.0-M3</version>
				<configuration>
					<skipCheckoutIfExists>false</skipCheckoutIfExists>
					<connectionUrl>scm:git:https://github.com/pagopa/pagopa-ecommerce-commons.git</connectionUrl>
					<scmVersionType>tag</scmVersionType>
					<scmVersion>${pagopa-ecommerce-commons.version}</scmVersion>
					<goals>install -DskipTests</goals>
				</configuration>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>bootstrap</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>${spotless.version}</version>
				<configuration>
					<formats>
						<!-- you can define as many formats as you want, each is independent -->
						<format>
							<!-- define the files to apply to -->
							<includes>
								<include>*.md</include>
								<include>.gitignore</include>
							</includes>
							<!-- define the steps to apply to those files -->
							<trimTrailingWhitespace/>
							<endWithNewline/>
							<indent>
								<tabs>true</tabs>
								<spacesPerTab>4</spacesPerTab>
							</indent>
						</format>
					</formats>
					<!-- define a language-specific format -->
					<java>
						<toggleOffOn/>
						<eclipse>
							<file>${project.basedir}/eclipse-style.xml</file>
						</eclipse>
						<trimTrailingWhitespace/>
						<endWithNewline/>
					</java>
					<kotlin>
						<toggleOffOn/>
						<ktfmt>
							<version>0.39</version> <!-- optional -->
							<style>DEFAULT</style> <!-- optional, other options are DROPBOX, GOOGLE and KOTLINLANG -->
						</ktfmt>
						<trimTrailingWhitespace/>
						<endWithNewline/>
					</kotlin>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>compile</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
